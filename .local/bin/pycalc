#!/usr/bin/python -i
import sys
import math

RESET = '\033[0m'
MAGENTA = '\033[95m'

# Customize your prompts
sys.ps1 = f'{MAGENTA}>>> {RESET}'
sys.ps2 = f'{MAGENTA}... {RESET}'


def displayhook(item):
    if isinstance(item, int) and not isinstance(item, bool):
        print('0x{0:X} ({0})'.format(item))
    elif isinstance(item, int):
        print('0x{0:X}L ({0}L)'.format(item))
    elif item is not None:
        print(repr(item))

def displayhook_reg(item):
    if isinstance(item, int) and not isinstance(item, bool):
        print('{0} (0x{0:X})'.format(item))
    elif isinstance(item, int):
        print('{0} (0x{0:X})'.format(item))
    elif item is not None:
        print(repr(item))

def flip():
    import sys
    if sys.displayhook==displayhook:
        sys.displayhook=displayhook_reg
    else:
        sys.displayhook=displayhook

sys.displayhook = displayhook

del sys

def genprimes(n):
    """Generates a list of primes < n using the sieve of Eratosthenes with O(n) memory."""
    if n < 2:
        return []

    table = [True] * n
    sqrtn = int(math.ceil(math.sqrt(n)))

    for i in range(2, sqrtn):
        if table[i]:
            for j in range(i * i, n, i):
                table[j] = False

    primes = [2] + [i for i in range(3, n, 2) if table[i]]
    return primes

