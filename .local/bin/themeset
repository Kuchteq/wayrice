#!/bin/sh

#main script that takes care of theming (however it can't really be too centralized,
#as oftentimes theming requires some workarounds. This scripts also describes those.
currentBgInstance=$(pgrep swaybg)

setup() {
	#the "$XDG_RUNTIME_DIR/theme" file is the one from which many programs read what is the current theme. These programs include: 
 	echo $theme > "$XDG_RUNTIME_DIR/theme"
	newGtkTheme=$PREFERRED_GTK_THEME_LIGHT && [[ $theme == "dark" ]] && newGtkTheme=$PREFERRED_GTK_THEME_DARK
	gsettings set org.gnome.desktop.interface color-scheme "prefer-$theme"
        dconf write /org/gnome/desktop/interface/gtk-theme "'$newGtkTheme'"

 	setsid -f swaybg --image ~/.local/share/wallpapers/wallpaper_$theme.jpg >/dev/null 2>&1
 	ln -sf "$XDG_CONFIG_HOME/bat/config_$theme" "$XDG_CONFIG_HOME/bat/config"
 	ln -sf "$XDG_CONFIG_HOME/foot/foot_$theme.ini" "$XDG_CONFIG_HOME/foot/foot.ini"
        if [ "$theme" = "dark" ]; then sed -i "s/^# set recolor/set recolor/" "$XDG_CONFIG_HOME/zathura/zathurarc"; else sed -i "s/^set recolor/# set recolor/" "$XDG_CONFIG_HOME/zathura/zathurarc"; fi;

 	# if it is the first time, it won't kill anything since there's nothing
 	[ -n "$currentBgInstance" ] && kill $currentBgInstance

	#zsh - for dynamic updates of shells the TRAPUSR1 function which reads "$XDG_RUNTIME_DIR/theme" is defined in the config that is then triggered here by special pkill (see down)
 	pkill -USR1 zsh

	#nvim - reading and handling is done under lua/plugins/misc.lua in vimoblush decleration
	for file in $(ls $XDG_RUNTIME_DIR/nvim.*); do
		nvim --server "$file" --remote-send "<cmd>:lua themeset('$theme')<CR>"
	done >/dev/null 2>&1

	lf -remote "send \$colormodeset $theme"
}


# opposite theme
if [ "$1" = "-o" ]; then		
        lastTheme=$(< "$XDG_RUNTIME_DIR/theme")
        theme=$([ "$lastTheme" = light ] && echo dark || echo light)
else
        theme="$1"
        [ "$1" = "light" ] || [ "$1" = "dark" ] || { echo "Theme can only be dark or light"; exit 1; }

fi

setup $theme
